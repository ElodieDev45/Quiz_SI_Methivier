import pandas as pd
import json
import os

# Dossier du script
script_dir = os.path.dirname(os.path.abspath(__file__))

# Chemins vers le fichier Excel et les fichiers JSON
excel_path = os.path.join(script_dir, "..", "Tableau-Questions.xlsx")
json_path = os.path.join(script_dir, "..", "questions.json")
config_path = os.path.join(script_dir, "..", "config.json")

# V√©rifie que le fichier Excel existe
if not os.path.exists(excel_path):
    print(f"‚ùå Fichier Excel introuvable : {excel_path}")
    exit()

# Chargement de la feuille "Questions"
df = pd.read_excel(excel_path, sheet_name="Questions")

# Colonnes principales √† garder
core_columns = ['id', 'category', 'question', 'correctAnswer']

# D√©tection des colonnes de r√©ponse : A, B, C, D...
response_columns = [col for col in df.columns if len(col) == 1 and col.isalpha() and col not in core_columns]

# Construction du JSON avec structure personnalis√©e
json_output = []
for _, row in df.iterrows():
    options = {
        col.lower(): row[col] for col in response_columns if pd.notna(row[col])
    }

    item = {
        "id": f"q{row['id']}",  # Pr√©fixe "q" comme dans ton exemple
        "category": row["category"],
        "question": row["question"],
        "options": options,
        "correctAnswer": str(row["correctAnswer"]).lower()  # En minuscules
    }

    json_output.append(item)

# √âcriture dans le fichier questions.json
print(f"‚û°Ô∏è Feuille 'Questions' charg√©e : {df.shape[0]} lignes, {df.shape[1]} colonnes")
with open(json_path, "w", encoding="utf-8") as f:
    json.dump(json_output, f, ensure_ascii=False, indent=2)

print(f"‚úÖ Fichier questions.json export√© : {json_path}")


# üìù G√©n√©ration du fichier config.json depuis l‚Äôonglet "Infos"
try:
    df_infos = pd.read_excel(excel_path, sheet_name="Infos")
    df_infos.reset_index(drop=True, inplace=True)  # üëà On remet l‚Äôindex √† z√©ro

    print("üìä Colonnes d√©tect√©es :", df_infos.columns.tolist())
    print("üî¢ Index disponibles :", df_infos.index.tolist())

    titre = df_infos.at[0, "Titre-principal"] if "Titre-principal" in df_infos.columns else "Titre par d√©faut"
    description = df_infos.at[0, "Description-projet"] if "Description-projet" in df_infos.columns else ""

    print("üéØ Titre extrait :", titre)
    print("üìù Description extraite :", description)

    with open(config_path, "w", encoding="utf-8") as f:
        json.dump({
            "titre-principal": titre,
            "description-projet": description
        }, f, ensure_ascii=False, indent=2)

    print(f"‚úÖ Fichier config.json g√©n√©r√© : {config_path}")

except Exception as e:
    import traceback
    print("‚ùå Erreur lors de la g√©n√©ration de config.json :")
    traceback.print_exc()

